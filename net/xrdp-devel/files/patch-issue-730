--- common/xrdp_constants.h.orig	2017-09-28 02:25:19 UTC
+++ common/xrdp_constants.h
@@ -189,13 +189,21 @@
 #define RDP_KEYPRESS                   0
 #define RDP_KEYRELEASE                 (KBD_FLAG_DOWN | KBD_FLAG_UP)
 
-#define MOUSE_FLAG_MOVE                0x0800
-#define MOUSE_FLAG_BUTTON1             0x1000
-#define MOUSE_FLAG_BUTTON2             0x2000
-#define MOUSE_FLAG_BUTTON3             0x4000
-#define MOUSE_FLAG_BUTTON4             0x0280
-#define MOUSE_FLAG_BUTTON5             0x0380
-#define MOUSE_FLAG_DOWN                0x8000
+/* Mouse Event (MS-RDPBCGR 2.2.8.1.1.3.1.1.3) */
+#define PTRFLAGS_HWHEEL                0x0400
+#define PTRFLAGS_WHEEL                 0x0200
+#define PTRFLAGS_WHEEL_NEGATIVE        0x0100
+#define WheelRotationMask              0x01FF
+#define PTRFLAGS_MOVE                  0x0800
+#define PTRFLAGS_DOWN                  0x8000
+#define PTRFLAGS_BUTTON1               0x1000
+#define PTRFLAGS_BUTTON2               0x2000
+#define PTRFLAGS_BUTTON3               0x4000
+
+/* Mouse Event (MS-RDPBCGR 2.2.8.1.1.3.1.1.4) */
+#define PTRXFLAGS_DOWN                 0x8000
+#define PTRXFLAGS_BUTTON1              0x0001
+#define PTRXFLAGS_BUTTON2              0x0002
 
 /* Raster operation masks */
 #define ROP2_S(rop3)                   (rop3 & 0xf)
@@ -594,11 +602,16 @@
 #define  SOLIDPATTERNBRUSHONLY         0x0040
 #define  ORDERFLAGS_EXTRA_FLAGS        0x0080
 
-#define  INPUT_FLAG_SCANCODES       0x0001
-#define  INPUT_FLAG_MOUSEX          0x0004
-#define  INPUT_FLAG_FASTPATH_INPUT  0x0008
-#define  INPUT_FLAG_UNICODE         0x0010
-#define  INPUT_FLAG_FASTPATH_INPUT2 0x0020
+/* Input Capability Set (MS-RDPBCGR 2.2.7.1.6) */
+#define  INPUT_FLAG_SCANCODES          0x0001
+#define  INPUT_FLAG_MOUSEX             0x0004
+#define  INPUT_FLAG_FASTPATH_INPUT     0x0008
+#define  INPUT_FLAG_UNICODE            0x0010
+#define  INPUT_FLAG_FASTPATH_INPUT2    0x0020
+#define  INPUT_FLAG_UNUSED1            0x0040
+#define  INPUT_FLAG_UNUSED2            0x0080
+#define  TS_INPUT_FLAG_MOUSE_HWHEEL    0x0100
+#define  TS_INPUT_FLAG_QOE_TIMESTAMPS  0x0200
 
 #define  COMPDESK_NOT_SUPPORTED      0x0000
 #define  COMPDESK_SUPPORTED          0x0001
--- libxrdp/xrdp_caps.c.orig	2017-09-28 02:25:19 UTC
+++ libxrdp/xrdp_caps.c
@@ -924,7 +924,11 @@ xrdp_caps_send_demand_active(struct xrdp
     out_uint16_le(s, RDP_CAPSET_INPUT); /* 13(0xd) */
     out_uint16_le(s, RDP_CAPLEN_INPUT); /* 88(0x58) */
 
-    flags = INPUT_FLAG_SCANCODES | INPUT_FLAG_MOUSEX | INPUT_FLAG_UNICODE;
+    flags = INPUT_FLAG_SCANCODES |
+            INPUT_FLAG_MOUSEX    |
+            INPUT_FLAG_UNICODE   |
+            TS_INPUT_FLAG_MOUSE_HWHEEL;
+
     if (self->client_info.use_fast_path & 2)
     {
         flags |= INPUT_FLAG_FASTPATH_INPUT | INPUT_FLAG_FASTPATH_INPUT2;
--- xrdp/xrdp_wm.c.orig	2017-09-28 02:25:19 UTC
+++ xrdp/xrdp_wm.c
@@ -1264,6 +1264,8 @@ xrdp_wm_mouse_click(struct xrdp_wm *self
                     self->mm->mod->mod_event(self->mm->mod, WM_BUTTON3UP, x, y, 0, 0);
                 }
 
+                /* vertical scroll */
+
                 if (but == 4)
                 {
                     self->mm->mod->mod_event(self->mm->mod, WM_BUTTON4DOWN,
@@ -1279,21 +1281,23 @@ xrdp_wm_mouse_click(struct xrdp_wm *self
                     self->mm->mod->mod_event(self->mm->mod, WM_BUTTON5UP,
                                              self->mouse_x, self->mouse_y, 0, 0);
                 }
-                if (but == 6 && down)
-                {
-                    self->mm->mod->mod_event(self->mm->mod, WM_BUTTON6DOWN, x, y, 0, 0);
-                }
-                else if (but == 6 && !down)
-                {
-                    self->mm->mod->mod_event(self->mm->mod, WM_BUTTON6UP, x, y, 0, 0);
-                }
-                if (but == 7 && down)
+
+                /* horizontal scroll */
+
+                if (but == 6)
                 {
-                    self->mm->mod->mod_event(self->mm->mod, WM_BUTTON7DOWN, x, y, 0, 0);
+                    self->mm->mod->mod_event(self->mm->mod, WM_BUTTON6DOWN,
+                                             self->mouse_x, self->mouse_y, 0, 0);
+                    self->mm->mod->mod_event(self->mm->mod, WM_BUTTON6UP,
+                                             self->mouse_x, self->mouse_y, 0, 0);
                 }
-                else if (but == 7 && !down)
+
+                if (but == 7)
                 {
-                    self->mm->mod->mod_event(self->mm->mod, WM_BUTTON7UP, x, y, 0, 0);
+                    self->mm->mod->mod_event(self->mm->mod, WM_BUTTON7DOWN,
+                                             self->mouse_x, self->mouse_y, 0, 0);
+                    self->mm->mod->mod_event(self->mm->mod, WM_BUTTON7UP,
+                                             self->mouse_x, self->mouse_y, 0, 0);
                 }
             }
         }
@@ -1638,14 +1642,14 @@ xrdp_wm_process_input_mouse(struct xrdp_
 {
     DEBUG(("mouse event flags %4.4x x %d y %d", device_flags, x, y));
 
-    if (device_flags & MOUSE_FLAG_MOVE) /* 0x0800 */
+    if (device_flags & PTRFLAGS_MOVE)
     {
         xrdp_wm_mouse_move(self, x, y);
     }
 
-    if (device_flags & MOUSE_FLAG_BUTTON1) /* 0x1000 */
+    if (device_flags & PTRFLAGS_BUTTON1)
     {
-        if (device_flags & MOUSE_FLAG_DOWN) /* 0x8000 */
+        if (device_flags & PTRFLAGS_DOWN)
         {
             xrdp_wm_mouse_click(self, x, y, 1, 1);
         }
@@ -1655,9 +1659,9 @@ xrdp_wm_process_input_mouse(struct xrdp_
         }
     }
 
-    if (device_flags & MOUSE_FLAG_BUTTON2) /* 0x2000 */
+    if (device_flags & PTRFLAGS_BUTTON2)
     {
-        if (device_flags & MOUSE_FLAG_DOWN) /* 0x8000 */
+        if (device_flags & PTRFLAGS_DOWN)
         {
             xrdp_wm_mouse_click(self, x, y, 2, 1);
         }
@@ -1667,9 +1671,9 @@ xrdp_wm_process_input_mouse(struct xrdp_
         }
     }
 
-    if (device_flags & MOUSE_FLAG_BUTTON3) /* 0x4000 */
+    if (device_flags & PTRFLAGS_BUTTON3)
     {
-        if (device_flags & MOUSE_FLAG_DOWN) /* 0x8000 */
+        if (device_flags & PTRFLAGS_DOWN)
         {
             xrdp_wm_mouse_click(self, x, y, 3, 1);
         }
@@ -1679,9 +1683,10 @@ xrdp_wm_process_input_mouse(struct xrdp_
         }
     }
 
-    if (device_flags & 0x200) /* PTRFLAGS_WHEEL */
+    /* vertical mouse wheel */
+    if (device_flags & PTRFLAGS_WHEEL)
     {
-        if (device_flags & 0x100) /* PTRFLAGS_WHEEL_NEGATIVE */
+        if (device_flags & PTRFLAGS_WHEEL_NEGATIVE)
         {
             xrdp_wm_mouse_click(self, 0, 0, 5, 0);
         }
@@ -1691,6 +1696,24 @@ xrdp_wm_process_input_mouse(struct xrdp_
         }
     }
 
+    /* horizontal mouse wheel */
+
+    /**
+     * As mstsc does MOUSE not MOUSEX for horizontal scrolling,
+     * PTRFLAGS_HWHEEL must be handled here.
+     */
+    if (device_flags & PTRFLAGS_HWHEEL)
+    {
+        if (device_flags & PTRFLAGS_WHEEL_NEGATIVE)
+        {
+            xrdp_wm_mouse_click(self, 0, 0, 6, 0);
+        }
+        else
+        {
+            xrdp_wm_mouse_click(self, 0, 0, 7, 0);
+        }
+    }
+
     return 0;
 }
 
@@ -1699,24 +1722,24 @@ static int
 xrdp_wm_process_input_mousex(struct xrdp_wm* self, int device_flags,
                              int x, int y)
 {
-    if (device_flags & 0x8000) /* PTRXFLAGS_DOWN */
+    if (device_flags & PTRXFLAGS_DOWN)
     {
-        if (device_flags & 0x0001) /* PTRXFLAGS_BUTTON1 */
+        if (device_flags & PTRXFLAGS_BUTTON1)
         {
             xrdp_wm_mouse_click(self, x, y, 6, 1);
         }
-        else if (device_flags & 0x0002) /* PTRXFLAGS_BUTTON2 */
+        else if (device_flags & PTRXFLAGS_BUTTON2)
         {
             xrdp_wm_mouse_click(self, x, y, 7, 1);
         }
     }
     else
     {
-        if (device_flags & 0x0001) /* PTRXFLAGS_BUTTON1 */
+        if (device_flags & PTRXFLAGS_BUTTON1)
         {
             xrdp_wm_mouse_click(self, x, y, 6, 0);
         }
-        else if (device_flags & 0x0002) /* PTRXFLAGS_BUTTON2 */
+        else if (device_flags & PTRXFLAGS_BUTTON2)
         {
             xrdp_wm_mouse_click(self, x, y, 7, 0);
         }
